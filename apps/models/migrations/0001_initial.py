# Generated by Django 5.2.7 on 2025-10-07 08:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("videos", "0006_alter_video_slug"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=200, null=True, unique=True
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="Stage name or display name", max_length=100
                    ),
                ),
                ("bio", models.TextField(blank=True, help_text="Biography")),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="models/avatars/"
                    ),
                ),
                (
                    "cover_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="models/covers/"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("female", "Женщина"),
                            ("male", "Мужчина"),
                            ("trans", "Трансгендер"),
                            ("other", "Другое"),
                        ],
                        default="female",
                        max_length=10,
                    ),
                ),
                (
                    "age",
                    models.PositiveIntegerField(
                        blank=True, help_text="Age in years", null=True
                    ),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "country",
                    models.CharField(
                        blank=True, help_text="Country of origin", max_length=100
                    ),
                ),
                (
                    "ethnicity",
                    models.CharField(blank=True, help_text="Ethnicity", max_length=100),
                ),
                (
                    "career_start",
                    models.DateField(
                        blank=True, help_text="Career start date", null=True
                    ),
                ),
                (
                    "zodiac_sign",
                    models.CharField(
                        blank=True, help_text="Zodiac sign", max_length=20
                    ),
                ),
                (
                    "hair_color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("blonde", "Блондинка"),
                            ("brunette", "Брюнетка"),
                            ("redhead", "Рыжая"),
                            ("black", "Черная"),
                            ("brown", "Коричневая"),
                            ("gray", "Серая"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "eye_color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("blue", "Голубые"),
                            ("brown", "Коричневые"),
                            ("green", "Зеленые"),
                            ("hazel", "Ореховые"),
                            ("gray", "Серые"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                    ),
                ),
                ("has_tattoos", models.BooleanField(default=False)),
                (
                    "tattoos_description",
                    models.TextField(blank=True, help_text="Description of tattoos"),
                ),
                ("has_piercings", models.BooleanField(default=False)),
                (
                    "piercings_description",
                    models.TextField(blank=True, help_text="Description of piercings"),
                ),
                (
                    "breast_size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("small", "Маленькая"),
                            ("medium", "Средняя"),
                            ("large", "Большая"),
                            ("very_large", "Очень большая"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "measurements",
                    models.CharField(
                        blank=True,
                        help_text="Body measurements (e.g., 32A-60-83)",
                        max_length=50,
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        blank=True, help_text="Height in cm", null=True
                    ),
                ),
                (
                    "weight",
                    models.PositiveIntegerField(
                        blank=True, help_text="Weight in kg", null=True
                    ),
                ),
                ("views_count", models.PositiveIntegerField(default=0)),
                ("subscribers_count", models.PositiveIntegerField(default=0)),
                ("videos_count", models.PositiveIntegerField(default=0)),
                ("likes_count", models.PositiveIntegerField(default=0)),
                (
                    "is_verified",
                    models.BooleanField(default=False, help_text="Verified model"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Model",
                "verbose_name_plural": "Models",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ModelLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="models.model",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_likes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Model Like",
                "verbose_name_plural": "Model Likes",
                "ordering": ["-created_at"],
                "unique_together": {("user", "model")},
            },
        ),
        migrations.CreateModel(
            name="ModelSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscribers",
                        to="models.model",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Model Subscription",
                "verbose_name_plural": "Model Subscriptions",
                "ordering": ["-created_at"],
                "unique_together": {("user", "model")},
            },
        ),
        migrations.CreateModel(
            name="ModelVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, help_text="Primary model in this video"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_videos",
                        to="models.model",
                    ),
                ),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_models",
                        to="videos.video",
                    ),
                ),
            ],
            options={
                "verbose_name": "Model Video",
                "verbose_name_plural": "Model Videos",
                "ordering": ["-created_at"],
                "unique_together": {("model", "video")},
            },
        ),
    ]
